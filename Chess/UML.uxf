<diagram program="umletino" version="15.1"><zoom_level>5</zoom_level><help_text>Certainly! Here's a simplified version of the UML class diagram for the `GameManager` class without the lines:

```
     GameManager      
 ------------------------
 - nextMoves: QList&lt;Move&gt;      
 - movesDone: QList&lt;Move&gt;      
 - pieces: QMap&lt;Position, Piece&gt; 
 - takenPieces: QList&lt;Piece&gt;   
 # MAX_PGN_CHARACTERS: const unsigned int 
 ------------------------
 + GameManager()                
 + GameManager(QString fileName)
 + GameManager(QFile file)      
 + getPieces(): const QMap&lt;Position, Piece&gt;
 + nextMove()                    
 + previousMove()                
 + hasNextMove(): bool           
 + hasPreviousMove(): bool       
 + toPgn(QFile file)             
 - createStartingPieces()        
 - parsePgn(QString fileContent) 
 - isEndingIndication(QString pgnInstruction): bool
 - isMoveNumber(QString pgnInstruction): bool    
 - instanciateMoves(QString pgnInstruction, QString color)
 - getPrerequisite(QString pgnInstruction): Position      
 - getNextPosition(QString pgnInstruction): Position      
 - isValidPieceInput(QChar pgnChar): bool     
 - isValidRowInput(QChar pgnChar): bool       
 - isValidColumnInput(QChar pgnChar): bool    
 - rowNumber(QChar rowInput): int            
 - columnNumber(QChar columnInput): int      
 - isCapture(QString pgnInstruction): bool  
 - isPromotion(QString pgnInstruction): bool 
 - getPiecePromotedToPgnIdentifier(QString pgnInstruction): QString 
```

This version of the diagram provides a cleaner look, focusing solely on the class structure, attributes, and methods.</help_text><element><id>UMLClass</id><coordinates><x>44</x><y>405</y><w>150</w><h>130</h></coordinates><panel_attributes>     GameManager      
--
 - nextMoves: QList&lt;Move&gt;      
 - movesDone: QList&lt;Move&gt;      
 - pieces: QMap&lt;Position, Piece&gt; 
 - takenPieces: QList&lt;Piece&gt;   
 # MAX_PGN_CHARACTERS: const unsigned int 
--
 + GameManager()                
 + GameManager(QString fileName)
 + GameManager(QFile file)      
 + getPieces(): const QMap&lt;Position, Piece&gt;
 + nextMove()                    
 + previousMove()                
 + hasNextMove(): bool           
 + hasPreviousMove(): bool       
 + toPgn(QFile file)             </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>74</x><y>685</y><w>105</w><h>100</h></coordinates><panel_attributes>     BoardDrawer      
--
 - lightBrush: QBrush
 - darkBrush: QBrush
 - lightPen: QPen
 - darkPen: QPen
 # SQUARE_SIZE: const int 
--
 + BoardDrawer()                
 + drawSquares(QGraphicsScene* scene)                
 + drawPieces(QGraphicsScene* scene, const QM</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>294</x><y>680</y><w>105</w><h>90</h></coordinates><panel_attributes>       Position      
--
 - row: int
 - column: int
--
 + Position()                
 + Position(int row, int column)                
 + toString(): QString const                
 + isEmpty(const QMap&lt;Position, Piece&gt; &amp;pieces): bool const                
 + isEmpty(QString color, const QMap&lt;Position, Piece&gt; &amp;pieces): bool const                
 + operator&lt;(const Position&amp; other): bool const                
 + operator==(const Position&amp; other): bool const                
 + operator!=(const Position&amp; other): bool const 
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>484</x><y>350</y><w>105</w><h>165</h></coordinates><panel_attributes>       Piece      
--
 - position: Position
 - color: QString
 - pgnIdentifier: QString
 - iconFileName: QString
 - movementStrategy: MovementStrategy*
--
 + Piece()                
 + Piece(const Piece &amp;piece)                
 + Piece(QString color, QString pgnIdentifier, Position position)                
 + ~Piece()                
 + getPosition(): Position                
 + getColor(): QString                
 + getPgnIdentifier(): QString                
 + getIconFileName(): QString                
 + toString(): QString                
 + matchPosition(const Position &amp;nextPosition, Position prerequisite, const QMap&lt;Position, Piece&gt; &amp;pieces): bool                
 + static findPiece(QString pgnIdentifier, QString color, const QMap&lt;Position, Piece&gt; &amp;pieces): Piece                
 + static findPiece(QString pgnIdentifier, QString color, const Position &amp;nextPosition, Position prerequisite, const QMap&lt;Position, Piece&gt; &amp;pieces): Piece </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>294</x><y>350</y><w>105</w><h>255</h></coordinates><panel_attributes>       Move      
--
 - piece: Piece
 - previousPosition: Position
 - nextPosition: Position
 - capture: bool
 - capturedPiece: Piece
 - promotion: bool
 - piecePromotedTo: Piece
 - castlingKingside: bool
 - castlingQueenside: bool
--
 + Move()                
 + Move(Piece piece, Position nextPosition)                
 + Move(Piece piece, Position previousPosition, Position nextPosition)
 + toString(): QString                
 + getPiece(): Piece                
 + getPreviousPosition(): Position                
 + getNextPosition(): Position                
 + isCapture(): bool                
 + getCapturedPiece(): Piece                
 + isPromotion(): bool                
 + getPiecePromotedTo(): Piece                
 + isCastlingKingside(): bool                
 + isCastlingQueenside(): bool                
 + setCapturedPiece(Piece capturedPiece)                
 + setPiecePromotedTo(QString piecePromotedToIdentifier)                
 + setKingsideCastlingKing(Piece castlingKing)                
 + setQueensideCastlingKing(Piece castlingKing)                
 + castleKingside(QMap&lt;Position, Piece&gt; &amp;pieces)                
 + castleQueenside(QMap&lt;Position, Piece&gt; &amp;pieces)                
 + undoCastleKingside(QMap&lt;Position, Piece&gt; &amp;pieces)                
 + undoCastleQueenside(QMap&lt;Position, Piece&gt; &amp;pieces)                
 + canCastleKingside(const QMap&lt;Position, Piece&gt; &amp;pieces): bool                
 + canCastleQueenside(const QMap&lt;Position, Piece&gt; &amp;pieces): bool 
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>664</x><y>410</y><w>105</w><h>40</h></coordinates><panel_attributes>   MovementStrategy      
--
 + MovementStrategy()                
 + ~MovementStrategy()                
 + virtual canGoTo(const Position &amp;position, const Position &amp;targetPosition, const QMap&lt;Position, Piece&gt; &amp;pieces): bool = 0 
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>189</x><y>475</y><w>115</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=0..*</panel_attributes><additional_attributes>10;10;210;10</additional_attributes></element><element><id>Relation</id><coordinates><x>394</x><y>480</y><w>100</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1</panel_attributes><additional_attributes>10;10;180;10</additional_attributes></element><element><id>Relation</id><coordinates><x>584</x><y>435</y><w>90</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1</panel_attributes><additional_attributes>10;10;160;10</additional_attributes></element><element><id>Relation</id><coordinates><x>344</x><y>600</y><w>20</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1</panel_attributes><additional_attributes>10;10;10;160</additional_attributes></element><element><id>Relation</id><coordinates><x>119</x><y>610</y><w>20</w><h>85</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1</panel_attributes><additional_attributes>10;10;10;150</additional_attributes></element><element><id>Relation</id><coordinates><x>394</x><y>510</y><w>155</w><h>235</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1</panel_attributes><additional_attributes>290;10;290;440;10;440</additional_attributes></element><element><id>UMLClass</id><coordinates><x>69</x><y>600</y><w>105</w><h>15</h></coordinates><panel_attributes>Main Window
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>119</x><y>530</y><w>20</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1</panel_attributes><additional_attributes>10;140;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>594</x><y>565</y><w>105</w><h>35</h></coordinates><panel_attributes>   PawnMovementStrategy      
--
 + PawnMovementStrategy()                
 + canGoTo(const Position &amp;position, const Position &amp;targetPosition, const QMap&lt;Position, Piece&gt; &amp;pieces): bool 
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>734</x><y>560</y><w>105</w><h>50</h></coordinates><panel_attributes>   RookMovementStrategy      
--
 + RookMovementStrategy()                
 + canGoTo(const Position &amp;position, const Position &amp;targetPosition, const QMap&lt;Position, Piece&gt; &amp;pieces): bool                
private:
 + noBlockingPieceOnColumn(const Position &amp;position, const Position &amp;targetPosition, const QMap&lt;Position, Piece&gt; &amp;pieces): bool                
 + noBlockingPieceOnRow(const Position &amp;position, const Position &amp;targetPosition, const QMap&lt;Position, Piece&gt; &amp;pieces): bool 
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>644</x><y>445</y><w>55</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>90;10;90;140;10;140;10;240</additional_attributes></element><element><id>Relation</id><coordinates><x>724</x><y>445</y><w>65</w><h>125</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;140;110;140;110;230</additional_attributes></element></diagram>